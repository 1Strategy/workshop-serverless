{
   "Comment":"1Strategy Serverless Architectures Lab",
   "StartAt":"DemonstratePower",
   "States":{
      "DemonstratePower":{
        "Type":"Task",
        "Resource":"<REPLACE ME>",
        "Next":"ScanForTargets"
      },
      "ScanForTargets":{
        "Type":"Task",
        "Resource":"arn:aws:lambda:us-west-2:281782457076:function:serverless_scan_for_targets",
        "Next":"SelectTarget"
      },
      "SelectTarget":{
         "Type":"Task",
         "Resource":"arn:aws:lambda:us-west-2:281782457076:function:serverless_targeting_computer",
         "Next":"Travel"
      },
      "Travel":{
         "Type":"Choice",
         "Choices":[
            {
               "Variable":"$.travel_distance",
               "NumericGreaterThanEquals":100,
               "Next":"HyperSpaceJump"
            },
            {
               "Variable":"$.travel_distance",
               "NumericLessThan":100,
               "Next":"SublightTravel"
            }
         ]
      },
      "HyperSpaceJump":{
         "Type":"Wait",
         "Seconds":5,
         "Next":"IssueChargeCommands"
      },
      "SublightTravel":{
         "Type":"Wait",
         "Seconds":1,
         "Next":"IssueChargeCommands"
      },
      "IssueChargeCommands":{
          "Type":"Task",
          "Resource":"arn:aws:lambda:us-west-2:281782457076:function:serverless_issue_orders",
          "Next":"ChargeCannons"
      },
      "ChargeCannons":{
         "Type":"Parallel",
         "Next":"MergeOutput",
         "Branches":[
            {
               "StartAt":"ChargeCannon1",
               "States":{
                  "ChargeCannon1":{
                     "Type":"Pass",
                     "Result":"1",
                     "ResultPath":"$.cannon_identifier",
                     "Next":"ChargeCannon1Task"
                  },
                  "ChargeCannon1Task":{
                     "Type":"Task",
                     "Resource":"arn:aws:lambda:us-west-2:281782457076:function:serverless_charge_cannon",
                     "Retry":[
                        {
                           "ErrorEquals":[
                              "States.ALL"
                           ],
                           "IntervalSeconds":10,
                           "MaxAttempts":3,
                           "BackoffRate":1.5
                        }
                     ],
                     "End":true
                  }
               }
            },
            {
               "StartAt":"ChargeCannon2",
               "States":{
                  "ChargeCannon2":{
                     "Type":"Pass",
                     "Result":"2",
                     "ResultPath":"$.cannon_identifier",
                     "Next":"ChargeCannon2Task"
                  },
                  "ChargeCannon2Task":{
                     "Type":"Task",
                     "Resource":"arn:aws:lambda:us-west-2:281782457076:function:serverless_charge_cannon",
                     "Retry":[
                        {
                           "ErrorEquals":[
                              "States.ALL"
                           ],
                           "IntervalSeconds":10,
                           "MaxAttempts":3,
                           "BackoffRate":1.5
                        }
                     ],
                     "End":true
                  }
               }
            },
            {
               "StartAt":"ChargeCannon3",
               "States":{
                  "ChargeCannon3":{
                     "Type":"Pass",
                     "Result":"3",
                     "ResultPath":"$.cannon_identifier",
                     "Next":"ChargeCannon3Task"
                  },
                  "ChargeCannon3Task":{
                     "Type":"Task",
                     "Resource":"arn:aws:lambda:us-west-2:281782457076:function:serverless_charge_cannon",
                     "Retry":[
                        {
                           "ErrorEquals":[
                              "States.ALL"
                           ],
                           "IntervalSeconds":10,
                           "MaxAttempts":3,
                           "BackoffRate":1.5
                        }
                     ],
                     "End":true
                  }
               }
            },
            {
               "StartAt":"InformationPassThrough",
               "States":{
                  "InformationPassThrough":{
                     "Type":"Pass",
                     "End":true
                  }
               }
            }
         ]
      },
      "MergeOutput":{
         "Type":"Task",
         "Resource":"arn:aws:lambda:us-west-2:281782457076:function:serverless_merge_parallel",
         "Next":"PromptForFireCommand"
      },
      "PromptForFireCommand":{
         "Type":"Parallel",
         "Next":"MergeOutputStep",
         "Branches":[
            {
               "StartAt":"IssueFireCommand",
               "States":{
                  "IssueFireCommand":{
                     "Type":"Task",
                     "Resource":"<REPLACE ME>",
                     "TimeoutSeconds":120,
                     "Catch": [{
                        "ErrorEquals": [ "States.TaskFailed", "States.Timeout" ],
                        "Next": "Hesitation"
                        }],
                     "Next":"PlanetDestroyed"
                  },
                  "PlanetDestroyed":{
                    "Type":"Pass",
                    "Result":"planet_destroyed",
                    "ResultPath":"$.message.message_context",
                    "End":true
                  },
                  "Hesitation":{
                    "Type":"Pass",
                    "Result":"hesitation",
                    "ResultPath":"$.message.message_context",
                    "End":true

                  }
               }
            },
            {
               "StartAt":"WaitForCode",
               "States":{
                  "WaitForCode":{
                     "Type":"Wait",
                     "Seconds":3,
                     "Next":"GenerateCode"
                  },
                  "GenerateCode":{
                     "Type":"Task",
                     "Resource":"arn:aws:lambda:us-west-2:281782457076:function:serverless_get_firing_code",
                     "Next":"JSONXform"
                  },
                  "JSONXform":{
                     "Type":"Pass",
                     "InputPath":"$.firing_code",
                     "ResultPath":"$.message",
                     "Next":"SendCode"
                  },
                  "SendCode":{
                     "Type":"Task",
                     "Resource":"arn:aws:lambda:us-west-2:281782457076:function:serverless_notification",
                     "End":true
                  }
               }
            },
            {
               "StartAt":"InformationPassThrough1",
               "States":{
                  "InformationPassThrough1":{
                     "Type":"Pass",
                     "End":true
                  }
               }
            }
         ]
      },
      "MergeOutputStep":{
        "Type":"Task",
        "Next":"Report",
        "Resource":"arn:aws:lambda:us-west-2:281782457076:function:serverless_merge_parallel"
      },
      "Report":{
         "Type":"Task",
         "Resource":"arn:aws:lambda:us-west-2:281782457076:function:serverless_notification",
         "End":true
      }
   }
}
